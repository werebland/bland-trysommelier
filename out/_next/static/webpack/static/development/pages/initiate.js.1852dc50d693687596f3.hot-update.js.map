{"version":3,"file":"static/webpack/static/development/pages/initiate.js.1852dc50d693687596f3.hot-update.js","sources":["webpack:///./pages/initiate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed, { PoseGroup } from 'react-pose';\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\nimport _ from 'lodash'\nimport firebase from 'firebase'\nimport base from '../config'\nimport Head from 'next/head'\n\nimport MenuAdder from '../components/MenuAdder'\nimport Navbar from '../components/Navbar'\n\nconst PageWrapper = styled.div`\n  padding: 156px 24px 24px;\n  box-sizing: border-box;\n  border: 10px solid #1f1f1f;\n  min-height: 100vh;\n\n  @media only screen and (min-width: 960px) {\n    padding: 156px 16px 16px;\n  }\n`;\n\nconst PosedPageTitle = posed.h1({\n  closed: {\n    flex: 1,\n    fontSize: '20px',\n  },\n  open: {\n    flex: 5,\n    fontSize: '40px',\n  },\n})\n\nconst PageTitle = styled((props) => <PosedPageTitle {...props} />)`\n  font-size: 2rem;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif;\n  color: #1f1f1f;\n  position: relative;\n  margin: 0 auto 16px;\n  display: inline-flex;\n\n  &:after {\n    content: \"\";\n    width: 100%;\n    height: 8px;\n    background: #f94343;\n    display: block;\n    position: absolute;\n    bottom: 0px;\n    left: 4px;\n    z-index: -1;\n  }\n`;\n\nconst GetStartedFormProgress = styled.div`\n\n`;\n\nconst InitiateForm = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\nclass GetStarted extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      menus: []\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n      } else {\n        // User is signed out.\n        // ...\n      }\n      // ...\n    });\n  }\n\n  handleDrop(accepted, rejected) {\n    console.log(accepted);\n    let { menus } = this.state\n    _.forEach(accepted, function(file) {\n      let menu = {\n        name: file.name,\n        file\n      }\n      menus.push(menu)\n    })\n    console.log(menus);\n    this.setState({\n      menus: menus\n    })\n  }\n\n  handleRemove(i) {\n    let { menus } = this.state\n    menus.splice(i, 1)\n    console.log(menus);\n    this.setState({\n      menus\n    })\n  }\n\n  handleName(value, i) {\n    const { menus } = this.state\n    menus[i].name = value\n    this.setState({\n      menus\n    })\n  }\n\n  render() {\n    return (\n      <PageWrapper className=\"getStarted\">\n        <Head>\n          <title>Initiate | Somm | Your menu's personal assistant</title>\n        </Head>\n        <Navbar />\n        <InitiateForm>\n          <PoseGroup preEnterPose='preEnter'>\n            {this.state.currentStep == \"1\" &&\n              <PageTitle key=\"1\">\n                Add your menu\n              </PageTitle>\n            }\n            {this.state.currentStep == \"2\" &&\n              <PageTitle key=\"2\">\n                Choose your plan\n              </PageTitle>\n            }\n          </PoseGroup>\n          <MenuAdder files={this.state.menus} handleDrop={(accepted, rejected) => this.handleDrop(accepted, rejected)} handleRemove={(i) => this.handleRemove(i)} handleName={(value, i) => this.handleName(value, i)}/>\n        </InitiateForm>\n\n      </PageWrapper>\n    );\n  }\n\n}\n\nexport default GetStarted;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;;;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjFA;AACA;AAoFA;;;;A","sourceRoot":""}
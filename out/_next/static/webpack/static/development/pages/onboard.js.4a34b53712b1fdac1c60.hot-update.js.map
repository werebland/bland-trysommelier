{"version":3,"file":"static/webpack/static/development/pages/onboard.js.4a34b53712b1fdac1c60.hot-update.js","sources":["webpack:///./pages/onboard.js"],"sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport base from '../config'\nimport styled from 'styled-components';\nimport posed, {PoseGroup} from 'react-pose'\nimport axios from 'axios';\nimport Head from 'next/head'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepIcon from '@material-ui/core/StepIcon';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport _ from 'lodash'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from 'react-places-autocomplete';\n\n\nimport AccessForm from '../components/AccessForm'\nimport MenuUploader from '../components/MenuUploader'\n\nvar storage = firebase.storage();\nvar storageRef = storage.ref();\nvar menusRef = storageRef.child('menus')\n\nconst StyledButton = styled(Button)`\n  text-transform: none !important;\n  border-radius: 8px !important;\n  background: ${props => props.variant === \"contained\" ? '#54a0ff' : 'transparent'} !important;\n  box-shadow: ${props => props.variant === \"contained\" ? '0 2px 16px -2px rgba(31,31,31,0.32)' : 'none'} !important;\n  color: ${props => props.variant === \"contained\" ? '#fff' : '#1f1f1f'} !important;\n`;\n\nconst StyledTextField = styled(TextField)`\n  width: 100% !important;\n  border-radius: 8px !important;\n  font-family: 'Source Sans Pro', sans-serif !important;\n  box-sizing; border-box !important;\n\n  & fieldset {\n    border: 2px solid #1f1f1f !important;\n    border-radius: 8px !important;\n  }\n\n  & input {\n    font-family: 'Source Sans Pro', sans-serif !important;\n  }\n`;\n\nconst StyledFormControl = styled(FormControl)`\n  width: 100%;\n`;\n\nconst StyledOutlinedInput = styled(OutlinedInput)`\n  & fieldset {\n      border: 2px solid #1f1f1f !important;\n      border-radius: 8px !important;\n  }\n\n  & div svg {\n    right: 4px !important;\n  }\n`;\n\nconst StyledInputLabel = styled(InputLabel)`\n  color: ${props => props.focused ? '#1f1f1f' : '#9f9f9f'} !important;\n`;\n\nconst StyledStep = styled(Step)`\n  &.completed span span svg {\n    color: #1f1f1f !important;\n  }\n`;\n\nconst PageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: row nowrap;\n`;\n\nconst OnboardContent= styled.div`\n  height: 100%;\n  min-height: 100vh;\n  box-sizing: border-box;\n  padding: 16px;\n  background: #fff;\n  display: flex;\n  flex: .4;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif;\n  color: #1f1f1f;\n  position: relative;\n  margin: 0 auto 16px;\n  display: inline-flex;\n  z-index: 1;\n\n  &:after {\n    content: \"\";\n    width: 100%;\n    height: 8px;\n    background: #f94343;\n    display: block;\n    position: absolute;\n    bottom: 0px;\n    left: 4px;\n    z-index: -1;\n  }\n`;\n\nconst OnboardBackground = styled.div`\n  width: 77%;\n  height: 100%;\n  min-height: 100vh;\n  background: aliceblue;\n  background-image: url('https://images.unsplash.com/photo-1550259114-ad7188f0a967?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1100&q=80');\n  background-position: center;\n  background-size: cover;\n  display: flex;\n  flex: .6;\n\n`;\n\nconst OnboardStepper = styled.div`\n  width: 100%;\n`;\n\nconst PosedOnboardStepperContent = posed.div({\n  enter: {\n    x: 0,\n    opacity: 1,\n  },\n  exit: {\n    x: ({ activeStep, step }) => activeStep <= step ? 300 : -300,\n    opacity: 0,\n  }\n})\n\nconst OnboardStepperContent = styled(props => <PosedOnboardStepperContent {...props}/>)`\n\n`;\n\nconst styles = theme => ({\n  root: {\n    width: '90%',\n  },\n  backButton: {\n    marginRight: theme.spacing.unit,\n  },\n  instructions: {\n    marginTop: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n  },\n});\n\nconst StepperButtons = styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  flex-direction: ${props => props.activeStep === 0 ? 'row-reverse' : 'row'};\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  padding: 16px;\n  box-sizing: border-box;\n`;\n\nclass Onboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      restaurant: {\n        username: \"\",\n        name: \"\",\n        address: {\n          street: \"\",\n          city: \"\",\n          country: \"\",\n        },\n        price: \"\",\n        cuisine: \"\",\n        owner: \"\",\n      },\n      menus: [],\n      activeStep: 0,\n      email: \"\",\n      name: \"\",\n      labelWidth: 0,\n      isLoading: true,\n      addressTerm: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log(window.location.search);\n    var vars = {};\n    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {\n        vars[key] = value;\n    });\n    const { email } = vars\n    if (email) {\n      base.get('users', {\n        context: this,\n        withIds: true,\n        query: (ref) => ref.where('email', '==', email),\n      }).then(data => {\n        this.setState({\n          user: data[0],\n          isLoading: false,\n        })\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          user: {},\n          isLoading: false,\n        })\n      })\n    }\n  }\n\n  handleAccess(e) {\n    e.preventDefault();\n    const { email, name } = this.state\n    const names = _.split(name, ' ', 2)\n    const firstName = names[0]\n    const lastName = names[1]\n    const data = {\n      email,\n      firstName,\n      lastName\n    }\n    const formattedData = JSON.stringify(data)\n    console.log(formattedData);\n    axios({\n      method: 'post',\n      url: 'https://wt-2c136a182f9df0f639eceee9aa700a3d-0.sandbox.auth0-extend.com/somm-mailchimp',\n      data: formattedData,\n      headers: {\n        'Access-Control-Allow-Credentials': true,\n        'Access-Control-Allow-Origin': 'http://localhost:3000',\n        'Access-Control-Expose-Headers': 'x-auth0-proxy-stats, x-auth0-stats, x-wt-response-source, location',\n        'Content-Type': 'application/json'\n      }\n    }).then((response) => {\n      console.log(response);\n      this.setState({\n        accessStatus: 'success'\n      })\n    })\n    .catch((error) => {\n      console.log(error.response.data);\n      this.setState({\n        accessStatus: error.response.data.details.title\n      })\n    });\n  }\n\n  handleNext = () => {\n    const { activeStep } = this.state\n    if (activeStep === 2) {\n      this.handleComplete()\n    } else {\n      this.setState({\n        activeStep: activeStep + 1\n      })\n    }\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  handleDrop = (accepted, rejected) => {\n    let { menus } = this.state\n    _.forEach(accepted, function(file) {\n      const menu = {\n        name: file.name,\n        file\n      }\n      menus.push(menu)\n    })\n    this.setState({\n      menus\n    })\n  };\n\n  handleRemove = (i) => {\n    const { menus } = this.state\n    console.log('removed' + i);\n    menus.splice(i, 1)\n    this.setState({\n      menus\n    });\n  };\n\n  handleMenuName = (value, i) => {\n    let { menus } = this.state\n    menus[i].name = value\n    this.setState({\n      menus\n    })\n  }\n\n  handleRestaurantName = (value) => {\n    let { restaurant } = this.state\n    restaurant.name = value\n    this.setState({\n      restaurant\n    })\n  }\n\n  handleRestaurantCuisine = (value) => {\n    let { restaurant } = this.state\n    restaurant.cuisine = value\n    this.setState({\n      restaurant\n    })\n  }\n\n  handleRestaurantPrice = (event) => {\n    const { value } = event.target\n    let { restaurant } = this.state\n    restaurant.price = value\n    this.setState({\n      restaurant\n    })\n  }\n\n  handleRestaurantUsername = (value) => {\n    let { restaurant } = this.state\n    restaurant.username = value\n    this.setState({\n      restaurant\n    })\n  }\n\n  handleChange = address => {\n    this.setState({ addressTerm: address });\n    console.log(address);\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\n\n  handleComplete() {\n    this.createRestaurant()\n    this.uploadMenus()\n  }\n\n  createRestaurant() {\n    const { restaurant, user, activeStep } = this.state\n    restaurant.owner = user.id\n    console.log(user);\n    const data = restaurant\n    console.log(data);\n    base.addToCollection('restaurants', data)\n      .then(() => {\n\n      }).catch(err => {\n      //handle error\n    });\n  }\n\n  uploadMenus() {\n    const { files } = this.state\n    _.forEach(files, function(data) {\n      const { name, file } = data\n      var metadata = {\n        contentType: file.type\n      };\n      var uploadTask = storageRef.child('menus/' + file.name).put(file, metadata);\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n        function(snapshot) {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\n              console.log('Upload is paused');\n              break;\n            case firebase.storage.TaskState.RUNNING: // or 'running'\n              console.log('Upload is running');\n              break;\n          }\n        }, function(error) {\n\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n        });\n      });\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const steps = ['Tell us about your restaurant', 'Upload your menus', 'Customize your widget']\n    const { activeStep, restaurant, menus, user, addressTerm } = this.state;\n    const { email, firstName, lastName } = user\n    const { restaurantName, location, price, cuisine, address, username } = restaurant\n\n    return (\n      <PageWrapper>\n        <Head>\n          <title>\n            Onboard | Somm | Your menu's personal assistant\n          </title>\n          <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/static/apple-touch-icon.png\"/>\n          <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/static/favicon-32x32.png\"/>\n          <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/static/favicon-16x16.png\"/>\n          <link rel=\"manifest\" href=\"/static/site.webmanifest\"/>\n          <link rel=\"mask-icon\" href=\"/static/safari-pinned-tab.svg\" color=\"#f94343\"/>\n          <link rel=\"shortcut icon\" href=\"/static/favicon.ico\"/>\n          <meta name=\"msapplication-TileColor\" content=\"#ffffff\"/>\n          <meta name=\"msapplication-config\" content=\"/static/browserconfig.xml\"/>\n          <meta name=\"theme-color\" content=\"#ffffff\"/>\n          <script src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\"></script>\n        </Head>\n        {this.state.isLoading\n          ?\n          <OnboardContent>\n          </OnboardContent>\n          :\n          <React.Fragment>\n            {Object.keys(user).length > 0\n              ?\n              <OnboardContent>\n                <PageTitle>\n                  Hop onboard\n                </PageTitle>\n                <OnboardStepper>\n                  <Stepper activeStep={activeStep} alternativeLabel>\n                    {steps.map((label, i) => (\n                      <StyledStep key={label} classes={{ root: 'step', completed: 'completed' }}>\n                        <StepLabel>{label}</StepLabel>\n                      </StyledStep>\n                    ))}\n                  </Stepper>\n                  <PoseGroup activeStep={activeStep} preEnterPose=\"preEnter\">\n                    {activeStep === 0 &&\n                      <OnboardStepperContent key=\"0\" step={0}>\n                        <Grid container spacing={16} style={{ position: 'relative', zIndex: '2', background: '#fff', }}>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledTextField variant=\"outlined\" label=\"First name\" value={firstName} onChange={(e) => this.setState({ email: e.target.value })}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledTextField variant=\"outlined\" label=\"Last name\" value={lastName} onChange={(e) => this.setState({ email: e.target.value })}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={12} xl={12}>\n                            <StyledTextField variant=\"outlined\" label=\"Email\" value={email} onChange={(e) => this.handleEmail(e.target.value)}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledTextField variant=\"outlined\" label=\"Username\" value={username} onChange={(e) => this.handleRestaurantUsername(e.target.value)}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledTextField variant=\"outlined\" label=\"Restaurant name\" value={restaurantName} onChange={(e) => this.handleRestaurantName(e.target.value)}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={12} xl={12}>\n                          <PlacesAutocomplete\n                            value={addressTerm}\n                            onChange={this.handleChange}\n                            onSelect={this.handleSelect}\n                          >\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                              <div>\n                                <StyledFormControl>\n                                  <StyledTextField\n                                    variant=\"outlined\"\n                                    label=\"Location\"\n                                    id=\"places-autocomplete\"\n                                    {...getInputProps({\n                                      placeholder: 'Search Places ...',\n                                      className: 'location-search-input',\n                                    })}/>\n                                </StyledFormControl>\n                                <div className=\"autocomplete-dropdown-container\">\n                                  {loading && <div>Loading...</div>}\n                                  {suggestions.map(suggestion => {\n                                    const className = suggestion.active\n                                      ? 'suggestion-item--active'\n                                      : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                      : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                    return (\n                                      <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                          className,\n                                          style,\n                                        })}\n                                      >\n                                        <span>{suggestion.description}</span>\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              </div>\n                            )}\n                          </PlacesAutocomplete>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledTextField variant=\"outlined\" label=\"Cuisine\" value={cuisine} onChange={(e) => this.handleRestaurantCuisine(e.target.value)}/>\n                          </Grid>\n                          <Grid item sm={12} md={12} lg={6} xl={6}>\n                            <StyledFormControl variant=\"outlined\">\n                              <StyledInputLabel\n                                htmlFor=\"outlined-age-simple\"\n                              >\n                                Price\n                              </StyledInputLabel>\n                              <Select\n                                value={price}\n                                onChange={this.handleRestaurantPrice}\n                                input={\n                                  <StyledOutlinedInput\n                                    labelWidth={38}\n                                    name=\"price\"\n                                    id=\"outlined-price-simple\"\n                                    classes={{ root: 'label', focused: 'focused' }}\n                                  />\n                                }\n                              >\n                                <MenuItem value=\"\">\n                                  <em>None</em>\n                                </MenuItem>\n                                <MenuItem value={'$'}>$</MenuItem>\n                                <MenuItem value={'$-$$'}>$-$$</MenuItem>\n                                <MenuItem value={'$$'}>$$</MenuItem>\n                                <MenuItem value={'$$-$$$'}>$$-$$$</MenuItem>\n                                <MenuItem value={'$$$'}>$$$</MenuItem>\n                                <MenuItem value={'$-$$$'}>$-$$$</MenuItem>\n                              </Select>\n                            </StyledFormControl>\n                          </Grid>\n                        </Grid>\n                      </OnboardStepperContent>\n                    }\n                    {activeStep === 1 &&\n                      <OnboardStepperContent key=\"1\" step={1} style={{ position: 'relative', zIndex: '3', background: '#fff', }}>\n                        <MenuUploader\n                          files={this.state.menus}\n                          handleDrop={(accepted, rejected) => this.handleDrop(accepted, rejected)}\n                          handleRemove={(i) => this.handleRemove(i)}\n                          handleMenuName={(value, i) => this.handleMenuName(value, i)}/>\n                      </OnboardStepperContent>\n                    }\n                    {activeStep === 2 &&\n                      <OnboardStepperContent key=\"2\" step={2}>\n                        Widget customizer\n                      </OnboardStepperContent>\n                    }\n                  </PoseGroup>\n                  <StepperButtons activeStep={activeStep}>\n                    {this.state.activeStep > 0 &&\n                      <StyledButton onClick={this.handleBack} size=\"large\">\n                        Back\n                      </StyledButton>\n                    }\n                    <StyledButton\n                      variant=\"contained\"\n                      onClick={this.handleNext}\n                      size=\"large\">\n                      {activeStep === 2\n                        ?\n                        \"Finish\"\n                        :\n                        \"Next\"\n                      }\n                    </StyledButton>\n                  </StepperButtons>\n                </OnboardStepper>\n              </OnboardContent>\n              :\n              <OnboardContent>\n                <PageTitle>\n                  Whoops!\n                </PageTitle>\n                It doesn't look like you're part of our early access program yet.\n                <AccessForm\n                  handleAccess={(e) => this.handleAccess(e)}\n                  email={this.state.email}\n                  handleEmail={(email) => this.setState({ email })}\n                  name={this.state.name}\n                  handleName={(name) => this.setState({ name })}\n                  accessStatus={this.state.accessStatus}\n                  handleClear={() => this.setState({ accessStatus: \"\", name: \"\", email: \"\" })}/>\n              </OnboardContent>\n            }\n          </React.Fragment>\n        }\n        <OnboardBackground />\n      </PageWrapper>\n    );\n  }\n\n}\n\nexport default Onboard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAPA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AApGA;AAsGA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AA1GA;AA4GA;AACA;AADA;AAGA;AACA;AAhHA;AAiHA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA9HA;AA+HA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAvIA;AAwIA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA/IA;AAgJA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAvJA;AAwJA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA/JA;AAgKA;AAAA;AAGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAxKA;AAyKA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAhLA;AAkLA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AArLA;AAuLA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AA1LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAFA;AAwBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAJA;AAWA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AAqGA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;;;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAhCA;AAseA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxcA;AACA;AA2cA;;;;A","sourceRoot":""}
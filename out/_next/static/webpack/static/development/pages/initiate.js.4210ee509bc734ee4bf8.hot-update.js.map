{"version":3,"file":"static/webpack/static/development/pages/initiate.js.4210ee509bc734ee4bf8.hot-update.js","sources":["webpack:///./pages/initiate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed, { PoseGroup } from 'react-pose';\nimport _ from 'lodash'\nimport firebase from 'firebase'\nimport 'firebase/storage'\nimport base from '../config'\nimport Head from 'next/head'\nimport NoSSR from 'react-no-ssr';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuAdder from '../components/MenuAdder'\nimport Navbar from '../components/Navbar'\nimport RestaurantForm from '../components/RestaurantForm'\nimport StepperContent from '../components/StepperContent'\n\nconst storage = firebase.storage()\nconst storageRef = storage.ref()\n\nconst PageWrapper = styled.div`\n  padding: 156px 24px 24px;\n  box-sizing: border-box;\n  border: 10px solid #1f1f1f;\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n\n  @media only screen and (min-width: 960px) {\n    padding: 156px 16px 16px;\n  }\n`;\n\nconst StyledTextField = styled(TextField)`\n  width: 100% !important;\n  max-width: 360px !important;\n  margin-bottom: 16px !important;\n  border-radius: 8px !important;\n  font-family: 'Source Sans Pro', sans-serif !important;\n\n  & fieldset {\n    border-radius: 0 !important;\n    border: 4px solid #1f1f1f !important;\n  }\n\n  & input {\n    border-radius: 0 !important;\n    font-family: 'Source Sans Pro', sans-serif !important;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  height: 56px !important;\n  color: #fff !important;\n  font-family: 'Source Sans Pro', sans-serif !important;\n  font-size: 1.25rem !important;\n  font-weight: 700 !important;\n  background: ${props => props.disabled ? '#dfdfdf' : '#1f1f1f'}!important;\n  border-radius: 0px !important;\n  text-transform: none !important;\n  margin-bottom: 8px !important;\n  box-shadow: none !important;\n  position: relative !important;\n  border: 0 !important;\n  transition: 0.2s ease-out all;\n  padding: 0 24px !important;\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    height: 56px;\n    width: 100%;\n    background: ${props => props.disabled ? '#1f1f1f' : '#f94343'};\n    z-index: -1;\n    top: 4px;\n    left: 4px;\n  }\n`;\n\nconst PosedPageTitle = posed.h1({\n  closed: {\n    flex: 1,\n    fontSize: '20px',\n  },\n  open: {\n    flex: 5,\n    fontSize: '40px',\n  },\n})\n\nconst PageTitle = styled((props) => <PosedPageTitle {...props} />)`\n  font-size: 2rem;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif;\n  color: #1f1f1f;\n  position: relative;\n  margin: 0 auto 16px;\n  display: inline-flex;\n\n  &:after {\n    content: \"\";\n    width: 100%;\n    height: 8px;\n    background: #f94343;\n    display: block;\n    position: absolute;\n    bottom: 0px;\n    left: 4px;\n    z-index: -1;\n  }\n`;\n\nconst StepperButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StepperContainer = styled.div`\n  width: 100%;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  & .initiate__stepperStep span span svg.MuiStepIcon-active-674 {\n    color: #f94343 !important;\n  }\n`;\n\nconst StyledStep = styled(Step)`\n  background: ${props => props.active ? 'red' : 'black'};\n`;\n\nconst InitiateFormContainer = styled.div`\n  width: 100%;\n  max-width: 720px;\n`;\n\nfunction getSteps() {\n  return ['Tell us about your restaurant', 'Add your menus', 'Select a plan'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nclass GetStarted extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeStep: 0,\n      skipped: new Set(),\n      menus: [],\n      status: \"Upload\",\n      uid: ''\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        console.log(uid);\n        this.setState({\n          currentStep: 1,\n          uid\n        })\n        this.fetchRestaurant(uid)\n      } else {\n        // User is signed out.\n        // ...\n        console.log('Signed out');\n        this.setState({\n          currentStep: 0\n        })\n      }\n      // ...\n    }.bind(this)).bind(this);\n  }\n\n  fetchRestaurant(uid) {\n    base.get('restaurants', {\n      context: this,\n      withIds: true,\n      query: (ref) => ref.where('owner', '==', uid),\n    }).then(data => {\n      this.setState({\n        restaurant: data[0]\n      })\n    }).catch(err => {\n      //handle error\n    })\n  }\n\n  handleDrop(accepted, rejected) {\n    console.log(accepted);\n    let { menus } = this.state\n    _.forEach(accepted, function(file) {\n      let menu = {\n        name: file.name,\n        file,\n        progress: 0,\n      }\n      menus.push(menu)\n    })\n    console.log(menus);\n    this.setState({\n      menus: menus\n    })\n  }\n\n  handleUpload() {\n    const { menus, uid } = this.state\n    this.setState({\n      status: \"Uploading...\"\n    })\n    _.forEach(menus, function(menu) {\n      const file = menu.file\n      const metadata = {\n        type: file.type\n      }\n      const menuRef = storageRef.child('menus/' + uid + '/' + menu.name)\n      console.log(menuRef);\n      console.log(metadata);\n      var uploadTask = menuRef.put(file, metadata)\n      // Listen for state changes, errors, and completion of the upload.\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n        function(snapshot) {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload is ' + progress + '% done');\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED: // or 'paused'\n              console.log('Upload is paused');\n              break;\n            case firebase.storage.TaskState.RUNNING: // or 'running'\n              console.log('Upload is running');\n              break;\n          }\n        }, function(error) {\n\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n        });\n      }).bind(this);\n    })\n    this.setState({\n      status: \"Uploaded\"\n    })\n  }\n\n  handleRemove(i) {\n    let { menus } = this.state\n    menus.splice(i, 1)\n    console.log(menus);\n    this.setState({\n      menus\n    })\n  }\n\n  handleName(value, i) {\n    const { menus } = this.state\n    menus[i].name = value\n    this.setState({\n      menus\n    })\n  }\n\n  handleRestaurantChange(target) {\n    const { value, name } = target\n    const { restaurant } = this.state\n    restaurant[name] = value\n    this.setState({\n      restaurant\n    })\n  }\n\n    isStepOptional = step => false\n\n  handleNext = () => {\n    const { activeStep } = this.state;\n    let { skipped } = this.state;\n    if (this.isStepSkipped(activeStep)) {\n      skipped = new Set(skipped.values());\n      skipped.delete(activeStep);\n    }\n    this.setState({\n      activeStep: activeStep + 1,\n      skipped,\n    });\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1,\n    }));\n  };\n\n  // handleSkip = () => {\n  //   const { activeStep } = this.state;\n  //   if (!this.isStepOptional(activeStep)) {\n  //     // You probably want to guard against something like this,\n  //     // it should never occur unless someone's actively trying to break something.\n  //     throw new Error(\"You can't skip a step that isn't optional.\");\n  //   }\n  //\n  //   this.setState(state => {\n  //     const skipped = new Set(state.skipped.values());\n  //     skipped.add(activeStep);\n  //     return {\n  //       activeStep: state.activeStep + 1,\n  //       skipped,\n  //     };\n  //   });\n  // };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0,\n    });\n  };\n\n  isStepSkipped(step) {\n    return this.state.skipped.has(step);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const steps = getSteps();\n    const { activeStep } = this.state;\n\n    return (\n      <PageWrapper className=\"getStarted\">\n        <Head>\n          <title>Initiate | Somm | Your menu's personal assistant</title>\n        </Head>\n        <Navbar />\n        <PageTitle>\n          Get access\n        </PageTitle>\n        <InitiateFormContainer>\n          {this.state.restaurant &&\n            <NoSSR>\n              <StepperContainer>\n                <Stepper activeStep={activeStep}>\n                  {steps.map((label, index) => {\n                    const props = {};\n                    const labelProps = {};\n                    if (this.isStepOptional(index)) {\n                      labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                    }\n                    if (this.isStepSkipped(index)) {\n                      props.completed = false;\n                    }\n                    return (\n                      <StyledStep key={label} {...props} className=\"initiate__stepperStep\">\n                        <StepLabel {...labelProps}>{label}</StepLabel>\n                      </StyledStep>\n                    );\n                  })}\n                </Stepper>\n              </StepperContainer>\n              <div>\n                {activeStep === steps.length ? (\n                  <div>\n                    <Typography>\n                      All steps completed - you&apos;re finished\n                    </Typography>\n                    <Button onClick={this.handleReset}>\n                      Reset\n                    </Button>\n                  </div>\n                ) : (\n                  <div>\n                    <StepperContent activeStep={this.state.activeStep} restaurant={this.state.restaurant} menus={this.state.menus} handleRestaurantChange={(target) => this.handleRestaurantChange(target)}/>\n                    <StepperButtons>\n                      <StyledButton\n                        disabled={activeStep === 0}\n                        onClick={this.handleBack}\n                      >\n                        Back\n                      </StyledButton>\n                      <div>\n                        {this.isStepOptional(activeStep) && (\n                          <StyledButton\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSkip}\n                          >\n                            Skip\n                          </StyledButton>\n                        )}\n                        <StyledButton\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={this.handleNext}\n                        >\n                          {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                        </StyledButton>\n                      </div>\n                    </StepperButtons>\n                  </div>\n                )}\n              </div>\n            </NoSSR>\n          }\n\n        </InitiateFormContainer>\n\n      </PageWrapper>\n    );\n  }\n\n}\n\nexport default GetStarted;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAgBA;AAAA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AARA;AAUA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmJA;AAAA;AACA;AApJA;AAqJA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AAjKA;AAmKA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAvKA;AA2LA;AACA;AADA;AAGA;AACA;AA7LA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AADA;AAGA;AAEA;AACA;;;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AAGA;;;AA+CA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;AA1RA;AACA;AA6RA;;;;A","sourceRoot":""}
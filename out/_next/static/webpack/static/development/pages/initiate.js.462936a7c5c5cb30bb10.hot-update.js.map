{"version":3,"file":"static/webpack/static/development/pages/initiate.js.462936a7c5c5cb30bb10.hot-update.js","sources":["webpack:///./pages/initiate.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed, { PoseGroup } from 'react-pose';\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\nimport _ from 'lodash'\nimport firebase from 'firebase'\nimport base from '../config'\n\nimport MenuAdder from '../components/MenuAdder'\nimport Navbar from '../components/Navbar'\n\nconst PageWrapper = styled.div`\n  padding: 64px 24px 24px;\n  box-sizing: border-box;\n  border: 10px solid #1f1f1f;\n`;\n\nconst PosedPageTitle = posed.h1({\n  closed: {\n    flex: 1,\n    fontSize: '20px',\n  },\n  open: {\n    flex: 5,\n    fontSize: '40px',\n  },\n})\n\nconst PageTitle = styled((props) => <PosedPageTitle {...props} />)`\n  font-size: 2rem;\n  font-weight: 700;\n  color: #1f1f1f;\n  margin-bottom: 16px;\n  text-align: center;\n`;\n\nconst GetStartedFormProgress = styled.div`\n\n`;\n\nconst GetStartedForm = styled.div`\n\n`;\n\nclass GetStarted extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      menus: []\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n      } else {\n        // User is signed out.\n        // ...\n      }\n      // ...\n    });\n  }\n\n  handleDrop(accepted, rejected) {\n    console.log(accepted);\n    let { menus } = this.state\n    _.forEach(accepted, function(file) {\n      let menu = {\n        name: file.name,\n        file\n      }\n      menus.push(menu)\n    })\n    console.log(menus);\n    this.setState({\n      menus: menus\n    })\n  }\n\n  handleRemove(i) {\n    let { menus } = this.state\n    menus.splice(i, 1)\n    console.log(menus);\n    this.setState({\n      menus\n    })\n  }\n\n  handleName(i, value) {\n    const { menus } = this.state\n    let menu = menus[i]\n    menu.title = value\n  }\n\n  render() {\n    return (\n      <PageWrapper className=\"getStarted\">\n        <Navbar />\n        <PoseGroup preEnterPose='preEnter'>\n          {this.state.currentStep == \"1\" &&\n            <PageTitle key=\"1\">\n              Add your menu\n            </PageTitle>\n          }\n          {this.state.currentStep == \"2\" &&\n            <PageTitle key=\"2\">\n              Choose your plan\n            </PageTitle>\n          }\n        </PoseGroup>\n        <MenuAdder menus={this.state.menus} handleDrop={(accepted, rejected) => this.handleDrop(accepted, rejected)} handleRemove={(i) => this.handleRemove(i)}/>\n      </PageWrapper>\n    );\n  }\n\n}\n\nexport default GetStarted;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;;;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzEA;AACA;AA4EA;;;;A","sourceRoot":""}
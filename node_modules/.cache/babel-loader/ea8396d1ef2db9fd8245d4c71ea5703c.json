{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport posed, { PoseGroup } from 'react-pose';\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\nimport _ from 'lodash';\nimport firebase from 'firebase';\nimport base from '../config';\nimport MenuAdder from '../components/MenuAdder';\nvar PageWrapper = styled.div.withConfig({\n  displayName: \"initiate__PageWrapper\",\n  componentId: \"x6xz0w-0\"\n})([\"padding:64px 24px 24px;box-sizing:border-box;\"]);\nvar PosedPageTitle = posed.h1({\n  closed: {\n    flex: 1,\n    fontSize: '20px'\n  },\n  open: {\n    flex: 5,\n    fontSize: '40px'\n  }\n});\nvar PageTitle = styled(function (props) {\n  return React.createElement(PosedPageTitle, props);\n}).withConfig({\n  displayName: \"initiate__PageTitle\",\n  componentId: \"x6xz0w-1\"\n})([\"font-size:2rem;font-weight:700;color:#1f1f1f;margin-bottom:16px;text-align:center;\"]);\nvar GetStartedFormProgress = styled.div.withConfig({\n  displayName: \"initiate__GetStartedFormProgress\",\n  componentId: \"x6xz0w-2\"\n})([\"\"]);\nvar GetStartedForm = styled.div.withConfig({\n  displayName: \"initiate__GetStartedForm\",\n  componentId: \"x6xz0w-3\"\n})([\"\"]);\n\nvar GetStarted =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GetStarted, _Component);\n\n  function GetStarted(props) {\n    var _this;\n\n    _classCallCheck(this, GetStarted);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GetStarted).call(this, props));\n    _this.state = {\n      currentStep: 1,\n      menus: []\n    };\n    return _this;\n  }\n\n  _createClass(GetStarted, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          var isAnonymous = user.isAnonymous;\n          var uid = user.uid;\n        } else {} // User is signed out.\n        // ...\n        // ...\n\n      });\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(accepted, rejected) {\n      console.log(accepted);\n      var menus = this.state.menus;\n\n      _.forEach(accepted, function (file) {\n        var menu = {\n          name: file.name,\n          file: file\n        };\n        menus.push(menu);\n      });\n\n      console.log(menus);\n      this.setState({\n        menus: menus\n      });\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(i) {\n      var menus = this.state.menus;\n      menus.splice(i, 1);\n      console.log(menus);\n      this.setState({\n        menus: menus\n      });\n    }\n  }, {\n    key: \"handleName\",\n    value: function handleName(i, value) {\n      var menus = this.state.menus;\n      var menu = menus[i];\n      menu.title = value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(PageWrapper, {\n        className: \"getStarted\"\n      }, React.createElement(PoseGroup, {\n        preEnterPose: \"preEnter\"\n      }, this.state.currentStep == \"1\" && React.createElement(PageTitle, {\n        key: \"1\"\n      }, \"Add your menu\"), this.state.currentStep == \"2\" && React.createElement(PageTitle, {\n        key: \"2\"\n      }, \"Choose your plan\")), React.createElement(MenuAdder, {\n        menus: this.state.menus,\n        handleDrop: function handleDrop(accepted, rejected) {\n          return _this2.handleDrop(accepted, rejected);\n        },\n        handleRemove: function handleRemove(i) {\n          return _this2.handleRemove(i);\n        }\n      }));\n    }\n  }]);\n\n  return GetStarted;\n}(Component);\n\nexport default GetStarted;","map":null,"metadata":{},"sourceType":"module"}